a lot of this comes from personal trial-and-error, but I also used others' findings in this thread:
https://old.reddit.com/r/pokemon/comments/z0k5p2/anyone_know_how_sandwich_ingredients_work/ix94rdf/
so credit to the users in it (New_Log7685, ItzYoboiGuzma, PeddledP)
additional disclaimer that none of this is 100% and there are still a few
	unknowns about how it all works

common terms
================
given "Capture Power: Normal Lv. 1" -
	effect: general term for the whole line
	power: what the effects do, such as capture, egg, teensy, humungo, etc.
	type: the pokemon type associated with an effect (normal, fairy, dragon, grass, etc.)
flavor: sweet, bitter, sour, salty, hot


determining meal effects
===========================
meal effects are determined by the sum of all the individual ingredient stat values
	fillings have a multiplier to each of their stat values based on how many pieces of the filling go on the sandwich
		for example, an apple has 3 slices, so it's multiplier is 3
		a hamburger, on the other hand, only has 1 patty, so it's multiplier is 1
		condiments do not have multiple, so their multiplier is always just 1
	after you have the sum of all the flavors, the order of the top two flavors determines which power gets an additional +100 boost
		see the flavor bonus table below to check this
		if there's only 1 flavor (eg. 1x rice, 1x bitter herb, drop the rice) then it picks the next unused flavor from the flavor priority list to use as the second
		  flavor to compare the first one to
	once you've gotten all the sums, the values are then sorted in descending order
		flavors, powers and types each have a set priority for tiebreakers
	-
	from this point on, your three powers are set in stone as the top 3 powers, respectively
	the top 3 types determine both the types associated with each power and the levels
		-
		see calculateLevels() from util.js for the full level calculation, but generally, you're checking to see if the
		  first, second and third type amounts reach a certain threshold to advance a level
		-
		
		-
		type calculation is instead about taking your top 3 types, and determining which powers they are going
		  to associate themselves with (see calculateTypes() from util.js)
		standard case, for a basic level 1 recipe, results in the type selection of [1, 3, 2], which basically just means
		  that the firstPower (power with highest value) is paired with the first (1) type, secondPower paired with the third (3)
		  type, and thirdPower paired with the second (2) type (hence, [1, 3, 2])
		depending on the type values, there are cases where other type orders could result
			using [grass, fire, water] as an example:
				[1, 2, 3] -> grass, fire, water
				[1, 1, 3] -> grass, grass, water
				[1, 3, 1] -> grass, water, grass
				[1, 1, 1] -> grass, grass, grass
		-
		
		-
		the number of effect lines you have are determined by their associated types
		missing powers (eg, you have 3 types but only 2 powers) are always supplemented to match number of types
			takes the next, unused power from the power priority list
		missing types (eg, having less than 3 types) are only supplemented if it is a 3-star recipe
			if it is a 3-star recipe, then the types are supplemented until you have 3 types
				takes the next, unused type from the type priority list
			if it is a 1/2-star recipe, then any types with values 0 and below get dropped, allowing your final types to
			  be less than 3
			using final type values [grass 40, water 0, fire -10] as a 2-star example:
				final types would be [grass], because both water and fire are <= 0, meaning your effect lines would be:
					"Capture Power: Grass Lv. 1" (using capture as example)
					"none"
					"none"
		-
		
		preset, numbered in-game recipes follow a separate pattern of level calculation, and are hard-coded
			preset recipe #39 - "Master Dessert Sandwich" is the sole exception of breaking this pattern and is likely bugged
		
	
miscellaneous
================
putting > 12 of same ingredient on sandwich = 1 star (failure), this limit varies in multiplayer
4 star sandwiches possible in multiplayer
	seem to be able to get a 4-star if all flavors are used (sweet, sour, hot, salty, bitter) and there value is at least 100 each
2 star, low type value sandwiches have a certain threshold that changes the type pattern to [1, 2, 3]
	believe it's if firstType <= 4 AND < 3 pieces on sandwich
	along with some misc stuff..
# of dropped ingredients influences star level of sandwich
	pretty sure if pieces dropped are more than half of amount of pieces on sandwich, it becomes a 2 star
		12 total, 8 on, 4 dropped -> 3 star
		18 total, 12 on, 6 dropped -> 3 star
		1 total, 0 on, 1 dropped -> 3 star
		16 total, 11 on, 5 dropped -> 3 star
		4 total, 0 on, 4 dropped -> 2 star
		8 total, 4 on, 4 dropped -> 2 star
		6 total, 3 on, 3 dropped -> 2 star
		16 total, 10 on, 6 dropped -> 2 star
		etc
1-star sandwiches have all type values reduced by 500, minimum
	this means that recipes without at least 2 herba mystica will fail (have no effects) since only 3-star
	  sandwiches supplement types


flavor bonus table
====================
sweet, salty - egg
sweet, sour - catch
sweet, bitter - egg
sweet, hot - raid
salty, sweet - encounter
salty, sour - encounter
salty, bitter - exp
salty, hot - encounter
sour, sweet - catch
sour, salty - teensy
sour, bitter - teensy
sour, hot - teensy
bitter, sweet - item
bitter, salty - exp
bitter, sour - item
bitter, hot - item
hot, sweet - raid
hot, salty - humungo
hot, sour - humungo
hot, bitter - humungo

flavor priority
=================
sweet
salty
sour
bitter
hot


power priority
========================
egg
catch
exp
item
raid
title
sparkling
humungo
teensy
encounter


type priority
=================
Normal
Fighting
Flying
Poison
Ground
Rock
Bug
Ghost
Steel
Fire
Water
Grass
Electric
Psychic
Ice
Dragon
Dark
Fairy
