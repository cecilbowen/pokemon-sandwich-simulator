a lot of this comes from personal trial-and-error, but I also used others' findings in this thread:
https://old.reddit.com/r/pokemon/comments/z0k5p2/anyone_know_how_sandwich_ingredients_work/ix94rdf/
so credit to the users in it (New_Log7685, ItzYoboiGuzma, PeddledP)

Speculation and theorizing is over, since as of February 2025, the logic is now near 100% accurate for a very good reason.

common terms
================
given "Capture Power: Normal Lv. 1" -
	effect: general term for the whole line
	skill: what the effects do, such as capture, egg, teensy, humungo, etc.
		used to call it "power", but it got confusing when i want to say, eg, sum up the skill powers 
	type: the pokemon type associated with an effect (normal, fairy, dragon, grass, etc.)
flavor: sweet, bitter, sour, salty, hot
	sometimes referred to as "taste"

=================================================
how sandwich effects are determined 
=================================================
1. -----------------------------------------
start off all flavors at 0 in specific order
	sweet, salty, sour, bitter, hot (same as in flavors.json)
	it assigns each flavor an index that differs from this 
		see taste-map.json, but basically, it's 1,2,3,4,0 respective to the above order
			this is used later in step 2
sum up all the flavor values from your ingredients 
	make sure for each filling you do the value PER piece (for example, basil has 4 pieces)
	i use a map
deliciousness defaults to 1
	deliciousness is just sandwich star level - 1
	so in other words, we're defaulting sandwich star level to 2
	star level determines how much of an increase (or decrease) is added to all types (step 3)
determine the ingredient limit based on how many players
	default is 13, 3 players is 19 and 4 players is 25
	hitting or going past this many pieces on sandwich will fail it (1 star)
now we check to see if all of our summed flavors are at least 100
	if each flavor sum is >= 100, then we set deliciousness to 3 (4 stars)
otherwise if not, check how many fillings you've dropped
	if you've brought more fillings than you've dropped
		then thats a 3 star sandwich 
		it actually gives you a handicap of letting you start at -1 stuff dropped
			this means that when you drop something, it counts up from -1 instead of 0
			so if you drop 2 slices of tomato off the sandwich, your drop count is only 1
		any piece you drop adds to the dropped amount, whereas only each full filling counts as one you brought
			so if you bring 2 servings of cheese (3 slices each), but only drop 2 slices
				your brought:dropped ratio would be 2:2, which becomes 2:1 because of the -1 dropped handicap
			and if you bring 2 servings of rice (1 "slice" each), and drop 2 slices
				it's the same ratio as the previous example 
		the top of the sandwich baguette counts against you if you drop it!
			this can affect the sandwich outcome
sort your flavors list by points in descending order 
you now have both the flavors list with their sums and the deliciousness (star level)

2. -----------------------------------------
start off all skills at power 0 in specific order 
	order is the same as in powers.json
check how many herba mysticas are on the sandwich
	if 1 or more, add 10,000 to the title skill 
	if 2 or more, add 20,000 to the shiny skill 
		both of these can happen, not either-or 
now sum up all the skill powers from the ingredients 
	again, make sure for the fillings, you're adding up the powers PER piece 
	i use a map again 
so this next part is a little difficult to understand (lines 340 - 361 of helper.js)
	it uses the order and flavor indexing (mentioned in step 1) to choose one of the first five prime numbers
		it uses one of the chosen primes to multiply an incrementer (that started as 1)
		and the other prime to do the same to an incrementer chosen by the flavor index
		if both incremeters match, it adds 100 to the associated skill
	all this is just a fancy and probably too convoluted way of finding the first flavor combo match 
		and when you've found it, add 100 to the associated skill 
		similar to FLAVOR_TABLE_EZ from util.js 
sort your skills list by power in descending order 
anyway, now you have your skills 

3. -----------------------------------------
start off all types at power 0 in specific order
	order is same as in types.json 
sum up all the type amounts from your ingredients 
	same deal with the fillings as flavors and skills (add amounts PER filling)
now, depending on deliciousness (star level), we modify all the types 
	[-500, 0, 20, 100]
	if deliciousness is 0, we subtract 500 from all types
	if deliciousness is 2, we add 20 to all types, etc 
go ahead and sort your type list by power in descending order
i'm going to be referring to "final types" here 
	these are the "final" types you end up with (no more than 3)
	if i don't specify "final", then i'm referring to your gathered type list up until now 
at this point, if you have a 1 star sandwich, just push the top 3 types as your final types 
	this will likely fail your sandwich, since it will likely drop all your types below 0
		this can be circumvented with minimum 2 herba mysticas, since they give 250 to all types 
			or in multiplayer, since multiplayer allows for more ingredients in general
otherwise, your first final type will be the first in the list 
	if the first type's power is > 300, make the 2nd final type the same as the first
	if the first type's power is > 500, make the 3rd final type the same as the first 
now if you still don't have 3 final types 
	take the top 3 types of your pool (sorted by power, descending)
	divide the first type's power by 3, and subtract 20 from it afterwards
	divide the second type's power by 2
	divide the third type's power by 1 (so unchanged)
	make sure all 3 above are integers (not decimals)
	now sort these 3 types again by power, descending 
	finally, add these types to your final types list
		do this one-by-one until you either hit 3 final types
you now have your final types 

4. -----------------------------------------
loop through your skills, which should still be sorted by skill power, descending 
	skill level is determined by a threshold system: 1, 200, 400
		if skill power >= 400: level 3
		if skill power >= 200: level 2
		if skill power >= 1: level 1 
		otherwise, level 0
	if your skill's level is 0 or your skill's power is <= 0
		stop there.  you are done getting sandwich effects 
	otherwise, add the skill to your final sandwich effects 
		skill, type, level 
			type is in order of your type list 
			so when you add your first skill, add the first type along with it 
now you have all your sandwich effects 
		
preset, numbered in-game recipes follow a separate pattern of level calculation, and are hard-coded
	preset recipe #39 - "Master Dessert Sandwich" is the sole exception of breaking this pattern and is likely bugged
	regardless, if your sandwich, custom or not, matches a preset sandwich, then the effects are taken from the preset one 
	in the same vein, if you start a preset sandwich, but drop a bunch of ingredients to change it, it now follows custom sandwich rules
		
	
miscellaneous
================
4 star sandwiches possible in multiplayer
	able to get a 4-star if all flavors are used (sweet, sour, hot, salty, bitter) and their value is at least 100 each
1-star sandwiches have all type values reduced by 500, minimum
	this means that 1 star sandwiches without at least 2 herba mystica will fail (have no effects)
		or 1 herba mystica with other ingredients in multiplayer.  basically, if you can get a type back above 0
as mentioned in the how-to, the top baguette or bun, counts against you if you drop it, just like any of the fillings
	if you are 1 drop away from a 2 star sandwich, for example, then dropping the bun will drop you to 2 stars 
	i have 2 example recipes in the bread-vs.json file to show how inclusion or lack of a bun can change sandwich effects 
		(the example is 1 piece of watercress and 1 ketchup, with bun and then without bun)
